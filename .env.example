# =============================================================================
# EventBuddy - Environment Variables Configuration
# =============================================================================
# Copy this file to .env.local and fill in your actual values
# Never commit .env.local to version control!

# =============================================================================
# DISCORD CONFIGURATION
# =============================================================================
# Get these from https://discord.com/developers/applications

# Discord Bot Token (required)
# Go to Discord Developer Portal > Your App > Bot > Token
DISCORD_BOT_TOKEN=your_discord_bot_token_here

# Discord Application ID (required)
# Go to Discord Developer Portal > Your App > General Information > Application ID
DISCORD_CLIENT_ID=your_discord_client_id_here

# Discord Client Secret (required)
# Go to Discord Developer Portal > Your App > OAuth2 > General > Client Secret
DISCORD_CLIENT_SECRET=your_discord_client_secret_here

# Discord OAuth Redirect URI (required)
# This should match your Discord app's redirect URI
# For local development: http://localhost:3000/api/auth/discord-callback
# For production: https://your-domain.com/api/auth/discord-callback
DISCORD_REDIRECT_URI=http://localhost:3000/api/auth/discord-callback

# =============================================================================
# SUPABASE CONFIGURATION
# =============================================================================
# Get these from https://supabase.com/dashboard

# Supabase Project URL (required)
# Go to Supabase Dashboard > Your Project > Settings > API > Project URL
NEXT_PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co

# Supabase Service Role Key (required)
# Go to Supabase Dashboard > Your Project > Settings > API > Service Role Key
# WARNING: This key has admin privileges - keep it secret!
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key_here

# Supabase Anon Key (required for frontend)
# Go to Supabase Dashboard > Your Project > Settings > API > Anon Public Key
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key_here

# =============================================================================
# AI CONFIGURATION
# =============================================================================
# Get this from https://aistudio.google.com/

# Google Gemini API Key (required)
# Go to Google AI Studio > Get API Key > Create API Key
GEMINI_API_KEY=your_gemini_api_key_here

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Frontend URL (required)
# For local development: http://localhost:5173
# For production: https://your-frontend-domain.com
NEXT_PUBLIC_APP_URL=http://localhost:5173

# API URL (required)
# For local development: http://localhost:3000
# For production: https://your-api-domain.com
VITE_API_URL=http://localhost:3000

# =============================================================================
# FRONTEND ENVIRONMENT VARIABLES
# =============================================================================
# These are used by the Vite frontend (must be prefixed with VITE_)

# Discord Client ID for frontend (required)
VITE_DISCORD_CLIENT_ID=your_discord_client_id_here

# Supabase URL for frontend (required)
VITE_SUPABASE_URL=https://your-project-id.supabase.co

# Supabase Anon Key for frontend (required)
VITE_SUPABASE_ANON_KEY=your_supabase_anon_key_here

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Bot Admin Token (optional but recommended)
# Generate a secure random string for protecting bot management endpoints
# You can generate one with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
BOT_ADMIN_TOKEN=your_secure_random_token_here

# =============================================================================
# AI RATE LIMITING CONFIGURATION (OPTIONAL)
# =============================================================================
# These have sensible defaults but can be customized

# Maximum concurrent AI requests
AI_MAX_CONCURRENT=3

# AI requests per minute
AI_REQUESTS_PER_MINUTE=60

# Maximum retries for failed AI requests
AI_MAX_RETRIES=4

# Base delay between retries (milliseconds)
AI_BASE_DELAY_MS=250

# Maximum delay between retries (milliseconds)
AI_MAX_DELAY_MS=8000

# AI request timeout (milliseconds)
AI_TIMEOUT_MS=12000

# =============================================================================
# TOKEN BUCKET CONFIGURATION (OPTIONAL)
# =============================================================================
# Rate limiting for Discord interactions

# Guild rate limiting - burst capacity
GUILD_RATE_BURST=3

# Guild rate limiting - requests per second
GUILD_RATE_PER_SECOND=1

# User rate limiting - burst capacity
USER_RATE_BURST=2

# User rate limiting - requests per second
USER_RATE_PER_SECOND=0.5

# =============================================================================
# CIRCUIT BREAKER CONFIGURATION (OPTIONAL)
# =============================================================================
# Prevents cascading failures

# Number of failures before opening circuit
CIRCUIT_FAILURE_THRESHOLD=5

# Time to wait before attempting recovery (milliseconds)
CIRCUIT_RECOVERY_TIMEOUT=30000

# Maximum recovery attempts
CIRCUIT_MAX_RECOVERY_ATTEMPTS=3

# =============================================================================
# CACHE CONFIGURATION (OPTIONAL)
# =============================================================================

# AI response cache TTL (milliseconds)
AI_CACHE_TTL_MS=60000

# =============================================================================
# LOGGING CONFIGURATION (OPTIONAL)
# =============================================================================

# Enable debug logging (true/false)
DEBUG_LOGGING=false

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Node environment
NODE_ENV=development

# Development guild ID (for testing slash commands)
# Get this by right-clicking your Discord server > Copy Server ID
DEV_GUILD_ID=your_development_guild_id_here

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================
# These are typically set by your deployment platform

# Port for the application (optional)
PORT=3000

# Database URL (if using external PostgreSQL)
# DATABASE_URL=postgresql://username:password@localhost:5432/eventbuddy

# Redis URL (if using Redis for caching)
# REDIS_URL=redis://localhost:6379

# =============================================================================
# MONITORING CONFIGURATION (OPTIONAL)
# =============================================================================

# Sentry DSN for error tracking
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Log level (error, warn, info, debug)
LOG_LEVEL=info

# =============================================================================
# NOTES
# =============================================================================
#
# 1. Copy this file to .env.local for local development
# 2. Never commit .env.local to version control
# 3. For production, set these variables in your deployment platform
# 4. All variables marked as "required" must be set for the app to work
# 5. Variables marked as "optional" have sensible defaults
# 6. Make sure to use HTTPS URLs in production
# 7. Keep all secrets secure and rotate them regularly
#
# =============================================================================